"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/CodeViewer/PseudoCodeViewer.tsx":
/*!********************************************************!*\
  !*** ./src/components/CodeViewer/PseudoCodeViewer.tsx ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PseudoCodeViewer: function() { return /* binding */ PseudoCodeViewer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_debugService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/debugService */ \"(app-pages-browser)/./src/services/debugService.ts\");\n/* __next_internal_client_entry_do_not_use__ PseudoCodeViewer auto */ \nvar _s = $RefreshSig$();\n\n\nconst MONO_FONT = 'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace';\nconst CodeLine = (param)=>{\n    let { number, content, hasBreakpoint, isCurrentLine, onToggleBreakpoint } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex w-full hover:bg-gray-800/30 cursor-pointer items-center\\n        \".concat(isCurrentLine ? \"bg-blue-500/20\" : \"\", \"\\n        \").concat(hasBreakpoint ? \"bg-red-800/10\" : \"\"),\n        onClick: async ()=>{\n            console.log(\"CodeLine clicked:\", number);\n            await onToggleBreakpoint(number);\n        },\n        style: {\n            fontFamily: MONO_FONT\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-none w-[88px] flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-10 flex items-center justify-center\",\n                        children: hasBreakpoint && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-3 h-3 bg-red-500 rounded-full\"\n                        }, void 0, false, {\n                            fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                            lineNumber: 34,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-[48px] text-gray-400 text-right pr-4 select-none\",\n                        children: number\n                    }, void 0, false, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 30,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 py-1\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                    className: \"block\",\n                    children: [\n                        isCurrentLine && \"â†’ \",\n                        content\n                    ]\n                }, void 0, true, {\n                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                    lineNumber: 46,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, undefined);\n};\n_c = CodeLine;\nconst VariablesPanel = (param)=>{\n    let { variables } = param;\n    if (variables.length === 0) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-gray-800 text-gray-100 rounded-lg p-4 mt-4 border border-gray-700\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold mb-3\",\n                children: \"Variables\"\n            }, void 0, false, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 63,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-3 gap-4\",\n                children: variables.map((variable, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-gray-700 p-2 rounded\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-blue-300 font-mono\",\n                                children: variable.name\n                            }, void 0, false, {\n                                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                lineNumber: 67,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-green-300 font-mono\",\n                                children: variable.value\n                            }, void 0, false, {\n                                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-gray-400 text-sm\",\n                                children: variable.type\n                            }, void 0, false, {\n                                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                lineNumber: 69,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, index, true, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 66,\n                        columnNumber: 11\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n        lineNumber: 62,\n        columnNumber: 5\n    }, undefined);\n};\n_c1 = VariablesPanel;\nconst PseudoCodeViewer = ()=>{\n    _s();\n    console.log(\"PseudoCodeViewer rendered at:\", new Date().toISOString());\n    const [pseudoContent, setPseudoContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedLevel, setSelectedLevel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"default\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [debuggerState, setDebuggerState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isDebugging: false,\n        currentLine: null,\n        breakpoints: new Set(),\n        isPaused: false,\n        variables: []\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleKeyDown = (event)=>{\n            // Prevent default browser behavior for these keys\n            if ([\n                \"F5\",\n                \"F10\"\n            ].includes(event.key)) {\n                event.preventDefault();\n            }\n            // Only handle keyboard shortcuts if we have content loaded\n            if (!pseudoContent) return;\n            switch(event.key){\n                case \"F5\":\n                    if (event.shiftKey) {\n                        // Shift+F5: Stop debugging\n                        if (debuggerState.isDebugging) {\n                            stopDebugging();\n                        }\n                    } else {\n                        // F5: Start debugging or continue to next breakpoint\n                        if (!debuggerState.isDebugging) {\n                            if (debuggerState.breakpoints.size > 0) {\n                                startDebugging();\n                            }\n                        } else if (debuggerState.isPaused) {\n                            continueToNextBreakpoint();\n                        }\n                    }\n                    break;\n                case \"F10\":\n                    if (debuggerState.isDebugging && debuggerState.isPaused) {\n                        stepNextLine();\n                    }\n                    break;\n            }\n        };\n        window.addEventListener(\"keydown\", handleKeyDown);\n        return ()=>window.removeEventListener(\"keydown\", handleKeyDown);\n    }, [\n        debuggerState.isDebugging,\n        debuggerState.isPaused,\n        debuggerState.breakpoints,\n        pseudoContent\n    ]);\n    const handleFileUpload = async (event)=>{\n        setIsLoading(true);\n        setError(null);\n        try {\n            var _event_target_files;\n            const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n            if (!file) {\n                setError(\"No file selected\");\n                return;\n            }\n            const reader = new FileReader();\n            reader.onload = async (e)=>{\n                try {\n                    var _e_target;\n                    const content = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result;\n                    console.log(\"File content loaded:\", content.substring(0, 100) + \"...\");\n                    const pseudoData = {\n                        abstraction_levels: [\n                            \"default\"\n                        ],\n                        sections: [\n                            {\n                                level: \"default\",\n                                content: content.split(\"\\n\")\n                            }\n                        ]\n                    };\n                    setPseudoContent(pseudoData);\n                    setSelectedLevel(\"default\");\n                } catch (err) {\n                    const errorMessage = err instanceof Error ? err.message : \"Failed to load pseudo file\";\n                    setError(errorMessage);\n                    console.error(\"Error in file processing:\", err);\n                }\n            };\n            reader.onerror = (error)=>{\n                setError(\"Error reading file\");\n                console.error(\"FileReader error:\", error);\n            };\n            reader.readAsText(file);\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : \"Failed to process file\";\n            setError(errorMessage);\n            console.error(\"Error in file upload:\", err);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const toggleBreakpoint = async (lineNumber)=>{\n        console.log(\"Toggling breakpoint for line:\", lineNumber);\n        // Update local state first\n        setDebuggerState((prev)=>{\n            const newBreakpoints = new Set(prev.breakpoints);\n            if (newBreakpoints.has(lineNumber)) {\n                console.log(\"Removing breakpoint from line:\", lineNumber);\n                newBreakpoints.delete(lineNumber);\n            } else {\n                console.log(\"Adding breakpoint to line:\", lineNumber);\n                newBreakpoints.add(lineNumber);\n            }\n            console.log(\"Updated breakpoints:\", Array.from(newBreakpoints));\n            return {\n                ...prev,\n                breakpoints: newBreakpoints\n            };\n        });\n        // Then call the API if enabled\n        if (true) {\n            try {\n                console.log(\"Calling debug service for line:\", lineNumber);\n                const response = await (0,_services_debugService__WEBPACK_IMPORTED_MODULE_2__.setBreakpoint)(\"dummy-file-id\", lineNumber, selectedLevel);\n                console.log(\"Debug service response:\", response);\n            } catch (error) {\n                console.error(\"Error in toggleBreakpoint:\", error);\n            }\n        }\n    };\n    const startDebugging = ()=>{\n        const sortedBreakpoints = Array.from(debuggerState.breakpoints).sort((a, b)=>a - b);\n        console.log(\"Starting debugging with breakpoints:\", sortedBreakpoints);\n        if (sortedBreakpoints.length === 0) {\n            setError(\"Please set at least one breakpoint before starting debugging\");\n            return;\n        }\n        const firstBreakpoint = sortedBreakpoints[0];\n        console.log(\"Setting first breakpoint at line:\", firstBreakpoint);\n        setDebuggerState((prev)=>{\n            const newState = {\n                ...prev,\n                isDebugging: true,\n                isPaused: true,\n                currentLine: firstBreakpoint\n            };\n            console.log(\"New debugger state:\", newState);\n            return newState;\n        });\n    };\n    const stopDebugging = ()=>{\n        setDebuggerState((prev)=>({\n                ...prev,\n                isDebugging: false,\n                isPaused: false,\n                currentLine: null\n            }));\n    };\n    const stepNextLine = ()=>{\n        if (!pseudoContent) return;\n        const currentSection = pseudoContent.sections.find((section)=>section.level === selectedLevel) || pseudoContent.sections[0];\n        const totalLines = currentSection.content.length;\n        setDebuggerState((prev)=>{\n            if (prev.currentLine === null) return prev;\n            const nextLine = prev.currentLine + 1;\n            // If we've reached the end of the file\n            if (nextLine > totalLines) {\n                return {\n                    ...prev,\n                    isDebugging: false,\n                    isPaused: false,\n                    currentLine: null\n                };\n            }\n            // If we've hit a breakpoint\n            if (prev.breakpoints.has(nextLine)) {\n                return {\n                    ...prev,\n                    currentLine: nextLine,\n                    isPaused: true\n                };\n            }\n            // Regular step to next line\n            return {\n                ...prev,\n                currentLine: nextLine\n            };\n        });\n    };\n    const continueToNextBreakpoint = ()=>{\n        if (!pseudoContent) return;\n        const currentSection = pseudoContent.sections.find((section)=>section.level === selectedLevel) || pseudoContent.sections[0];\n        const totalLines = currentSection.content.length;\n        const sortedBreakpoints = Array.from(debuggerState.breakpoints).sort((a, b)=>a - b).filter((bp)=>bp > (debuggerState.currentLine || 0));\n        if (sortedBreakpoints.length === 0) {\n            // No more breakpoints, run to end\n            setDebuggerState((prev)=>({\n                    ...prev,\n                    isDebugging: false,\n                    isPaused: false,\n                    currentLine: null\n                }));\n            return;\n        }\n        const nextBreakpoint = sortedBreakpoints[0];\n        setDebuggerState((prev)=>({\n                ...prev,\n                currentLine: nextBreakpoint,\n                isPaused: true\n            }));\n    };\n    const clearAllBreakpoints = async ()=>{\n        // First update local state\n        setDebuggerState((prev)=>({\n                ...prev,\n                breakpoints: new Set()\n            }));\n        // Then notify the debug service if API is enabled\n        if (true) {\n            try {\n                // Get all current breakpoints before clearing\n                const breakpointsToRemove = Array.from(debuggerState.breakpoints);\n                // Remove each breakpoint via the API\n                for (const lineNumber of breakpointsToRemove){\n                    await (0,_services_debugService__WEBPACK_IMPORTED_MODULE_2__.setBreakpoint)(\"dummy-file-id\", lineNumber, selectedLevel);\n                }\n                console.log(\"All breakpoints cleared on server\");\n            } catch (error) {\n                console.error(\"Error clearing breakpoints:\", error);\n            }\n        }\n    };\n    const renderContent = ()=>{\n        if (!pseudoContent) return null;\n        const currentSection = pseudoContent.sections.find((section)=>section.level === selectedLevel) || pseudoContent.sections[0];\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"space-y-4\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex gap-4 mb-4\",\n                    children: [\n                        !debuggerState.isDebugging ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: startDebugging,\n                            className: \"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\",\n                            disabled: debuggerState.breakpoints.size === 0,\n                            title: \"Start debugging\",\n                            children: \"Start Debugging (F5)\"\n                        }, void 0, false, {\n                            fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                            lineNumber: 357,\n                            columnNumber: 13\n                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: continueToNextBreakpoint,\n                                    className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n                                    disabled: !debuggerState.isPaused,\n                                    title: \"Continue execution until next breakpoint\",\n                                    children: \"Continue (F5)\"\n                                }, void 0, false, {\n                                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                    lineNumber: 367,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: stepNextLine,\n                                    className: \"px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700\",\n                                    disabled: !debuggerState.isPaused,\n                                    title: \"Step to next line\",\n                                    children: \"Step Line (F10)\"\n                                }, void 0, false, {\n                                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                    lineNumber: 375,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: stopDebugging,\n                                    className: \"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\",\n                                    title: \"Stop debugging\",\n                                    children: \"Stop (Shift+F5)\"\n                                }, void 0, false, {\n                                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                    lineNumber: 383,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: clearAllBreakpoints,\n                            className: \"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\",\n                            disabled: debuggerState.isDebugging,\n                            title: \"Remove all breakpoints\",\n                            children: \"Clear Breakpoints\"\n                        }, void 0, false, {\n                            fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                            lineNumber: 392,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                    lineNumber: 355,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-gray-900 text-gray-100 rounded-lg shadow-xl border border-gray-700 overflow-hidden\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"overflow-x-auto\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-4 min-w-full\",\n                            children: currentSection.content.map((line, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CodeLine, {\n                                    number: index + 1,\n                                    content: line,\n                                    hasBreakpoint: debuggerState.breakpoints.has(index + 1),\n                                    isCurrentLine: debuggerState.currentLine === index + 1,\n                                    onToggleBreakpoint: toggleBreakpoint\n                                }, index, false, {\n                                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                    lineNumber: 407,\n                                    columnNumber: 17\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                            lineNumber: 405,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 404,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                    lineNumber: 403,\n                    columnNumber: 9\n                }, undefined),\n                debuggerState.isPaused && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VariablesPanel, {\n                    variables: debuggerState.variables\n                }, void 0, false, {\n                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                    lineNumber: 422,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n            lineNumber: 353,\n            columnNumber: 7\n        }, undefined);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container max-w-7xl mx-auto p-4 bg-[#3a0e2d]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4 mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"file\",\n                        accept: \".pseudo\",\n                        onChange: handleFileUpload,\n                        className: \"block w-full p-2\"\n                    }, void 0, false, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 432,\n                        columnNumber: 9\n                    }, undefined),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 440,\n                        columnNumber: 11\n                    }, undefined),\n                    pseudoContent && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                        value: selectedLevel,\n                        onChange: (e)=>setSelectedLevel(e.target.value),\n                        className: \"w-full p-2 border border-gray-300 rounded\",\n                        children: pseudoContent.abstraction_levels.map((level)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                value: level,\n                                children: level\n                            }, level, false, {\n                                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                                lineNumber: 452,\n                                columnNumber: 15\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                        lineNumber: 446,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 431,\n                columnNumber: 7\n            }, undefined),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center py-4 text-gray-600\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: \"Loading...\"\n                }, void 0, false, {\n                    fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                    lineNumber: 463,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 462,\n                columnNumber: 9\n            }, undefined),\n            !isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full\",\n                children: renderContent()\n            }, void 0, false, {\n                fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n                lineNumber: 469,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/workspaces/DEBUGLENS/frontend/src/components/CodeViewer/PseudoCodeViewer.tsx\",\n        lineNumber: 429,\n        columnNumber: 5\n    }, undefined);\n};\n_s(PseudoCodeViewer, \"F5P7AqHUUYpgZDTe3mjGfLhiHJ8=\");\n_c2 = PseudoCodeViewer;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"CodeLine\");\n$RefreshReg$(_c1, \"VariablesPanel\");\n$RefreshReg$(_c2, \"PseudoCodeViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/CodeViewer/PseudoCodeViewer.tsx\n"));

/***/ })

});